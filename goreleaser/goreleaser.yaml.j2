# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
#
# Make sure to check the documentation at https://goreleaser.com
#
project_name: acmednsproxy
before:
  hooks:
    - go mod tidy
builds:
{%- for build in matrix %}
  - id: main-{{build.os}}-{{build.arch}}-{{build.libc}}
    {%- if build.libc == "musl" %}
    env:
      - CC=x86_64-linux-musl-gcc
    {%- endif %}
    goos: [{{build.os}}]
    goarch: [{{build.arch}}]
    ldflags:
      - -s -w
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Goos={{.Runtime.Goos}}"}}
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Goarch={{.Runtime.Goarch}}"}}
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Version={{.Version}}"}}
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Binary={{.Binary}}"}}
    main: ./cmd/acmednsproxy
  - id: tool-{{build.os}}-{{build.arch}}-{{build.libc}}
    {%- if build.libc == "musl" %}
    env:
      - CC=x86_64-linux-musl-gcc
    {%- endif %}
    goos: [{{build.os}}]
    goarch: [{{build.arch}}]
    ldflags:
      - -s -w
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Goos={{.Runtime.Goos}}"}}
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Goarch={{.Runtime.Goarch}}"}}
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Version={{.Version}}"}}
      - -X {{"{{.ModulePath}}/{{.ProjectName}}.Binary={{.Binary}}"}}
    main: ./cmd/adpcrypt
    binary: adpcrypt
{%- endfor %}
archives:
  {%- for buildid in ("main","tool") %}
  {%- for build in matrix %}
  - id: {{buildid}}-{{build.os}}-{{build.arch}}-{{build.libc}}
    name_template: "{{"{{ .Binary }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}"}}-{{build.libc}}"
    builds: [{{buildid}}-{{build.os}}-{{build.arch}}-{{build.libc}}]
    format_overrides:
      - goos: windows
        format: zip
  {%- endfor %}
  {%- endfor %}
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{"{{ .Version }}-next"}}"
nfpms:
  {%- for pkg in ["deb", "apk"] %}
  {%- set pkg_matrix = matrix|selectattr("pkg." + pkg, "defined")|list -%}
  {%- if pkg_matrix|length > 0 %}
  - id: main-{{pkg}}
    package_name: acmednsproxy
    name_template: "{{ .PackageName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    maintainer: Kalle M. Aagaard <git@k-moeller.dk>
    license: MIT
    homepage: https://github.com/KalleDK/acmednsproxy
    contents:
      - src: ./examples/*
        dst: {{"/usr/share/doc/{{ .ProjectName }}/examples/"}}
    builds:
    {%- for build in pkg_matrix %}
      - main-{{build.os}}-{{build.arch}}-{{build.libc}}
    {%- endfor %}
    formats: [{{pkg}}]
  - id: tool-{{pkg}}
    package_name: acmednsproxy-tools
    name_template: "{{ .PackageName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    maintainer: Kalle M. Aagaard <git@k-moeller.dk>
    license: MIT
    homepage: https://github.com/KalleDK/acmednsproxy
    builds:
    {%- for build in pkg_matrix %}
      - tool-{{build.os}}-{{build.arch}}-{{build.libc}}
    {%- endfor %}
    formats: [{{pkg}}]
  {%- if pkg == "deb" %}
  {%- raw %}
  - id: main-systemd-deb
    package_name: acmednsproxy-systemd
    maintainer: Kalle M. Aagaard <git@k-moeller.dk>
    license: MIT
    homepage: https://github.com/KalleDK/acmednsproxy
    meta: true
    formats: [deb]
    dependencies:
      - acmednsproxy
    scripts:
      preinstall: "distros/deb/preinstall.sh"
    contents:
      - src: ./config/*
        dst: /etc/{{ .ProjectName }}/
        type: config|noreplace
      - src: ./distros/deb/{{ .ProjectName }}.service
        dst: /lib/systemd/system/{{ .ProjectName }}.service
      - src: ./distros/deb/{{ .ProjectName }}.default
        dst: /etc/default/{{ .ProjectName }}
  {%- endraw %}
  {%- endif -%}
  {%- if pkg == "apk" %}
  {%- raw %}
  - id: main-openrc-apk
    package_name: acmednsproxy-openrc
    file_name_template: "{{ .PackageName }}-{{ .Version }}"
    maintainer: Kalle M. Aagaard <git@k-moeller.dk>
    meta: true
    license: MIT
    homepage: https://github.com/KalleDK/acmednsproxy
    formats: [apk]
    dependencies:
      - acmednsproxy
    scripts:
      preinstall: "distros/apk/preinstall.sh"
    contents:
      - src: ./config/*
        dst: /etc/{{ .ProjectName }}/
        type: config|noreplace
      - src: ./distros/apk/{{ .ProjectName }}.initd
        dst: /etc/init.d/{{ .ProjectName }}
      - src: ./distros/apk/{{ .ProjectName }}.confd
        dst: /etc/conf.d/{{ .ProjectName }}
  {%- endraw %}
  {%- endif -%}
  {%- endif -%}
  {%- endfor %}
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
release:
  draft: true